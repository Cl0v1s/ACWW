name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}

  build-client:
    runs-on: ubuntu-latest
    needs: create-release
    container:
      image: devkitpro/devkitarm:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build NDS Client
        working-directory: client/nds
        run: |
            make
            zip nds.zip client.nds

      - name: Build 3DS Client
        working-directory: client/3ds
        run: |
            make
            zip 3ds.zip client.3dsx client.smdh

      - name: Upload NDS Client Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: client/nds/nds.zip
          asset_name: nds.zip
          asset_content_type: application/octet-stream

      - name: Upload 3DS Client Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: client/3ds/3ds.zip
          asset_name: 3ds.zip
          asset_content_type: application/octet-stream


  build-server:
    runs-on: ubuntu-latest
    needs: create-release
    container:
      image: golang:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Server
        working-directory: server
        run: make build

      - name: Upload Server Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: server/server
          asset_name: server
          asset_content_type: application/octet-stream

